#========================== Подстановка имен =========================#
substitutions:
  devicename: meteo-display
  device: met_disp
  ha_sensor: ha_sensor
  update: 60s

#============================== Тип ESP ==============================#
esp32:
  board: esp32dev
  flash_size: 16MB
  framework:
    type: esp-idf

#========================= Параметры прошивки ========================#
esphome:
  name: ${devicename}
  project:
    name: "Lilygo.TTGO T-Display"
    version: "1.8.1"
  platformio_options:
    board_upload.maximum_size: 16777216
    board_upload.ram_size: 520kB
    board_upload.maximum_ram_size: 532480
  on_boot:
    then:
      - output.set_level:
          id: ${device}_pwm
          level: 10%
  build_path: /config/esphome/build/meteo_display

#=========================== Параметры WiFi ==========================#
wifi:
  ssid: !secret ssid
  password: !secret pass
  manual_ip:
    static_ip: !secret met_disp_ip
    gateway: 192.168.1.1
    subnet: 255.255.255.0
  fast_connect: true

#========================= Параметры логгера =========================#
logger:
  baud_rate: 0

#=========================== Параметры API ===========================#
api:
  encryption:
    key: !secret met_disp_api

#=========================== Параметры OTA ===========================#
ota:
  password: !secret met_disp_ota

#======================== Параметры отладчика ========================#
debug:
  update_interval: ${update}

#=========================== Параметры I2C ===========================#
i2c:
  sda: 21
  scl: 22
  id: i2c_bus

#=========================== Параметры SPI ===========================#
spi:
  clk_pin: 18
  mosi_pin: 19

#==================== Настройка выхода ШИМ-сигнала ===================#
output:
  - platform: ledc
    id: ${device}_pwm
    pin: 4
    frequency: 20000 Hz

#============= Синхронизация времени через HomeAssistant =============#
time:
  - platform: homeassistant
    id: ${device}_esptime

#============= Переключение страниц дисплея по интервалу =============#
interval:
  - interval: 3s
    then:
      - display.page.show_next: ${device}_display
      - component.update: ${device}_display

#============================== Сенсоры ==============================#
sensor:
#----------------------- Мощность сигнала WiFi -----------------------#
  - <<: !include add_config/wifi_strength.config.yaml
#--------------------- Конвертация времени работы --------------------#
  - <<: !include add_config/uptime_convert.config.yaml
#----------------- Датчик освещенности (фоторезистор) ----------------#
#......................... Настройка пина ADC ........................#
  - platform: adc
    id: ${device}_light_sensor
    pin: 39
    update_interval: 30s
    internal: true
#......................... Настройка датчика .........................#
  - platform: resistance
    id: ${device}_light
    sensor: ${device}_light_sensor
    configuration: UPSTREAM
    resistor: 10kOhm
    filters:
      - lambda: return x/1000;
    internal: true
    on_value_range:
        - above: 22
          then:
          - component.update: ${device}_display
          - output.set_level:
              id: ${device}_pwm
              level: 100%
        - below: 22
          then:
          - component.update: ${device}_display
          - output.set_level:
              id: ${device}_pwm
              level: 10%
#--------------------------- Датчик BMP280 ---------------------------#
#............................ Температура ............................#
  - platform: bmp280
    address: 0x76
    temperature:
      id: ${device}_temp
      name: "${devicename} Temperature"
      oversampling: 16x
      device_class: "temperature"
#.............................. Давление .............................#
    pressure:
      id: ${device}_press
      name: "${devicename} Pressure"
      unit_of_measurement: mmHg
      filters:
      - multiply: 0.75
      device_class: "pressure"
      icon: mdi:gauge
    update_interval: ${update}
#---------------------- Датчики уличного сенсора ---------------------#
#............................ Температура ............................#
  - platform: homeassistant
    id: ${ha_sensor}_temp
    entity_id: sensor.metsens_temperature
    accuracy_decimals: 1
    internal: true
#............................. Влажность .............................#
  - platform: homeassistant
    id: ${ha_sensor}_humi
    entity_id: sensor.metsens_humidity
    accuracy_decimals: 1
    internal: true
#................................ CO2 ................................#
  - platform: homeassistant
    id: ${ha_sensor}_co2
    entity_id: sensor.metsens_co2
    accuracy_decimals: 0
    internal: true
#............................... PM2.5 ...............................#
  - platform: homeassistant
    id: ${ha_sensor}_pm25
    entity_id: sensor.metsens_pm2_5
    accuracy_decimals: 0
    internal: true
#................................ PM10 ...............................#
  - platform: homeassistant
    id: ${ha_sensor}_pm10
    entity_id: sensor.metsens_pm10
    accuracy_decimals: 0
    internal: true
#................................ tVOC ...............................#
  - platform: homeassistant
    id: ${ha_sensor}_tvoc
    entity_id: sensor.metsens_tvoc
    accuracy_decimals: 0
    internal: true
#............................ Formaldehyde ...........................#
  - platform: homeassistant
    id: ${ha_sensor}_form
    entity_id: sensor.metsens_formaldehyde
    accuracy_decimals: 0
    internal: true
#............................... Light ...............................#
  - platform: homeassistant
    id: ${ha_sensor}_light
    entity_id: sensor.metsens_light
    internal: true
#................................. UV ................................#
  - platform: homeassistant
    id: ${ha_sensor}_uv
    entity_id: sensor.metsens_uv
    internal: true
#............................. Radiation .............................#
  - platform: homeassistant
    id: ${ha_sensor}_stat
    entity_id: sensor.metsens_static_intensity
    accuracy_decimals: 1
    internal: true
#............................ Rain sensor ............................#
#  - platform: homeassistant
#    id: ${ha_sensor}_rain
#    entity_id: sensor.metsens_rain
#    internal: true
#........................... Storm distance ..........................#
#  - platform: homeassistant
#    id: ${ha_sensor}_storm
#    entity_id: sensor.metsens_storm_distance
#    internal: true
#.......................... Lightning energy .........................#
#  - platform: homeassistant
#    id: ${ha_sensor}_energ
#    entity_id: sensor.metsens_lightning_energy
#    internal: true
#---------------- ESP32 внутренний датчик температуры ----------------#
  - platform: internal_temperature
    id: ${device}_int_temp
    name: "${devicename} ESP t°"
    device_class: "temperature"

#========================= Текстовые сенсоры =========================#
text_sensor:
#---------------------------- Время работы ---------------------------#
  - <<: !include add_config/uptime.config.yaml
#------------------------- Информация о сети -------------------------#
  - <<: !include add_config/wifi_info.config.yaml
#----------------------- Причина перезагрузки ------------------------#
  - <<: !include add_config/reset_reason.config.yaml

#========================== Бинарные сенсоры =========================#
binary_sensor:
#------------------------- Статус подключения ------------------------#
  - <<: !include add_config/status.config.yaml
#---------------- Кнопка переключения страниц "НАЗАД" ----------------#
  - platform: gpio
    pin:
      number: 0
      inverted: true
      mode: INPUT_PULLUP
    id: ${device}_btn_1
    on_press:
      then:
      - display.page.show_next: ${device}_display
      - component.update: ${device}_display
#---------------- Кнопка переключения страниц "ВПЕРЕД" ---------------#
  - platform: gpio
    pin:
      number: 35
      inverted: true
    id: ${device}_btn_2
    icon: mdi:arrow-right-bold-circle-outline
    on_press:
      then:
      - display.page.show_previous: ${device}_display
      - component.update: ${device}_display

#=============================== Кнопки ==============================#
button:
#----------------------- Удаленный рестарт ESP -----------------------#
  - <<: !include add_config/restart.config.yaml
#---------------- Кнопка переключения страниц "НАЗАД" ----------------#
  - platform: template
    name: "${devicename} Left button"
    id: ${device}_l_btn
    on_press:
      then:
      - display.page.show_next: ${device}_display
      - component.update: ${device}_display
    icon: mdi:arrow-left-bold-circle-outline
#---------------- Кнопка переключения страниц "ВПЕРЕД" ---------------#
  - platform: template
    name: "${devicename} Right button"
    id: ${device}_r_btn
    on_press:
      then:
      - display.page.show_previous: ${device}_display
      - component.update: ${device}_display
    icon: mdi:arrow-right-bold-circle-outline

#================== Дисплей / настройка цвета текста =================#
color:
#------------------------------ Красный ------------------------------#
  - id: red_color
    hex: 'FF0000'
#------------------------------- Желтый ------------------------------#
  - id: yellow_color
    hex: 'FFFF00'
#.----------------------------- Зеленый ------------------------------#
  - id: green_color
    hex: '008000'
#------------------------------- Синий -------------------------------#
  - id: blue_color
    hex: '0000FF'
#------------------------------- Серый -------------------------------#
  - id: gray_color
    hex: '808080'
#------------------------------- Белый -------------------------------#
  - id: white_color
    hex: 'FFFFFF'

#===================== Экран / настройка шрифтов =====================#
font:
#-----------------------BuyanBold (размер - 70) ----------------------#
  - file: 'fonts/BuyanBold.ttf'
    id: font_1
    size: 70
#------------------------ Arial (размер - 30) ------------------------#
  - file: 'fonts/arial.ttf'
    id: font_2
    size: 30
    glyphs: !include add_config/glyphs.include.yaml
#------------------------ Arial (размер - 12) ------------------------#
  - file: 'fonts/arial.ttf'
    id: font_3
    size: 12
    glyphs: !include add_config/glyphs.include.yaml

#================ Экран / настройка иконок/изображений ===============#  
image:
#--------------------- Изображение / температура ---------------------#
  - file: "images/meteo_display/temperature.png"
    id: ${device}_img_temperature
    type: RGB24
#---------------------- Изображение / влажность ----------------------#
  - file: "images/meteo_display/humidity.png"
    id: ${device}_img_humidity
    type: RGB24
#----------------------- Изображение / давление ----------------------#
  - file: "images/meteo_display/pressure.png"
    id: ${device}_img_pressure
    type: RGB24
#------------------------- Изображение / CO2 -------------------------#
  - file: "images/meteo_display/co2.png"
    id: ${device}_img_co2
    type: RGB24
#------------------------- Изображение / PM10 ------------------------#
  - file: "images/meteo_display/pm_10.png"
    id: ${device}_img_pm10
    type: RGB24
#------------------------ Изображение / PM2.5 ------------------------#
  - file: "images/meteo_display/pm_25.png"
    id: ${device}_img_pm25
    type: RGB24
#----------------------- Изображение / радиация ----------------------#
  - file: "images/meteo_display/radiation.png"
    id: ${device}_img_radiation
    type: RGB24
#--------------------- Изображение / формальдегид --------------------#
  - file: "images/meteo_display/formaldehyde.png"
    id: ${device}_img_formaldehyde
    type: RGB24
#------------------------- Изображение / tVOC ------------------------#
  - file: "images/meteo_display/tvoc.png"
    id: ${device}_img_tVOC
    type: RGB24
#--------------------- Изображение / освещенность --------------------#
  - file: "images/meteo_display/light.png"
    id: ${device}_img_light
    type: RGB24
#-------------------------- Изображение / UV--------------------------#  
  - file: "images/meteo_display/uv.png"
    id: ${device}_img_uv
    type: RGB24
#----------------------- Изображение / давление ----------------------#
  - file: "images/meteo_display/thunder.png"
    id: ${device}_img_thunder
    type: RGB24

#========================= Экран / настройка =========================#
display:
  - platform: st7789v
    id: ${device}_display
    model: TTGO TDisplay 135x240
    cs_pin: 5
    dc_pin: 16
    reset_pin: 23
    backlight_pin: no
    rotation: 0
#----------------------- Вывод страниц на экран ----------------------#
    pages:
#.......................... Главная страница .........................#
      - id: ${device}_page_1
        lambda: |-
          it.rectangle(0, 32, 130, 198, id(green_color));
          it.line(0, 51, 128, 51, id(green_color));
          it.print(6, 36, font_3, yellow_color, "ПРОГНОЗ ПОГОДЫ");
#          if (id(temp_1).has_state()) {
#            if (id(temp_1).state < -25) {
#              it.printf(115, 55, font_2, temp_min_30, TextAlign::TOP_RIGHT, "%.1f", id(temp_1).state);  }
#            else if (id(temp_1).state < -20)  {
#              it.printf(115, 55, font_2, temp_min_25, TextAlign::TOP_RIGHT, "%.1f", id(temp_1).state);  }
#            else if (id(temp_1).state < -15)  {
#              it.printf(115, 55, font_2, temp_min_20, TextAlign::TOP_RIGHT, "%.1f", id(temp_1).state);  }
#            else if (id(temp_1).state < -10)  {
#              it.printf(115, 55, font_2, temp_min_15, TextAlign::TOP_RIGHT, "%.1f", id(temp_1).state);  }
#            else if (id(temp_1).state < -5) {
#              it.printf(115, 55, font_2, temp_min_10, TextAlign::TOP_RIGHT, "%.1f", id(temp_1).state);  }
#            else if (id(temp_1).state < 0)  {
#              it.printf(115, 55, font_2, temp_min_5, TextAlign::TOP_RIGHT, "%.1f", id(temp_1).state); }
#            else if (id(temp_1).state < 5)  {
#              it.printf(115, 55, font_2, temp_pls_5, TextAlign::TOP_RIGHT, "%.1f", id(temp_1).state); }
#            else if (id(temp_1).state < 10) {
#              it.printf(115, 55, font_2, temp_pls_10, TextAlign::TOP_RIGHT, "%.1f", id(temp_1).state);  }
#            else if (id(temp_1).state < 15) {
#              it.printf(115, 55, font_2, temp_pls_15, TextAlign::TOP_RIGHT, "%.1f", id(temp_1).state);  }
#            else if (id(temp_1).state < 20) {
#              it.printf(115, 55, font_2, temp_pls_20, TextAlign::TOP_RIGHT, "%.1f", id(temp_1).state);  }
#            else if (id(temp_1).state < 25) {
#              it.printf(115, 55, font_2, temp_pls_25, TextAlign::TOP_RIGHT, "%.1f", id(temp_1).state);  }
#            else if (id(temp_1).state >= 25)  {
#              it.printf(115, 55, font_2, temp_pls_30, TextAlign::TOP_RIGHT, "%.1f", id(temp_1).state);  }
#            }
#........................ Страница температуры .......................#
      - id: ${device}_page2
        lambda: |-
          it.image(20, 40, id(${device}_img_temperature));
          it.printf(65, 130, font_1, white_color, TextAlign::TOP_CENTER, "%.1f", id(${ha_sensor}_temp).state);
          it.printf(65, 200, font_2, white_color, TextAlign::TOP_CENTER, "°C");
#......................... Страница влажности ........................#
      - id: ${device}_page3
        lambda: |-
          it.image(20, 40, id(${device}_img_humidity));
          it.printf(65, 130, font_1, white_color, TextAlign::TOP_CENTER, "%.1f", id(${ha_sensor}_humi).state);
          it.printf(65, 200, font_2, white_color, TextAlign::TOP_CENTER, "%%");
#................... Страница атмосферного давления ..................#
      - id: ${device}_page4
        lambda: |-
          it.image(20, 40, id(${device}_img_pressure));
          it.printf(65, 130, font_1, white_color, TextAlign::TOP_CENTER, "%.1f", id(${device}_press).state);
          it.printf(65, 200, font_2, white_color, TextAlign::TOP_CENTER, "мм рт.ст.");
#............................ Страница CO2 ...........................#
      - id: ${device}_page5
        lambda: |-
          it.image(20, 40, id(${device}_img_co2));
          it.printf(65, 130, font_1, white_color, TextAlign::TOP_CENTER, "%.0f", id(${ha_sensor}_co2).state);
          it.printf(65, 200, font_2, white_color, TextAlign::TOP_CENTER, "ppm");
#........................... Страница PM2.5 ..........................#
      - id: ${device}_page6
        lambda: |-
          it.image(20, 40, id(${device}_img_pm25));
          it.printf(65, 130, font_1, white_color, TextAlign::TOP_CENTER, "%.0f", id(${ha_sensor}_pm25).state);
          it.printf(65, 200, font_2, white_color, TextAlign::TOP_CENTER, "мкг/м³");
#........................... Страница PM10 ...........................#
      - id: ${device}_page7
        lambda: |-
          it.image(20, 40, id(${device}_img_pm10));          
          it.printf(65, 130, font_1, white_color, TextAlign::TOP_CENTER, "%.0f", id(${ha_sensor}_pm10).state);
          it.printf(65, 200, font_2, white_color, TextAlign::TOP_CENTER, "мкг/м³");
#........................... Страница tVOC ...........................#
      - id: ${device}_page8
        lambda: |-
          it.image(20, 40, id(${device}_img_tVOC));
          it.printf(65, 130, font_1, white_color, TextAlign::TOP_CENTER, "%.0f", id(${ha_sensor}_tvoc).state);
          it.printf(65, 200, font_2, white_color, TextAlign::TOP_CENTER, "мкг/м³");
#....................... Страница формальдегида ......................#
      - id: ${device}_page9
        lambda: |-
          it.image(20, 40, id(${device}_img_formaldehyde)); 
          it.printf(65, 130, font_1, white_color, TextAlign::TOP_CENTER, "%.0f", id(${ha_sensor}_form).state);
          it.printf(65, 200, font_2, white_color, TextAlign::TOP_CENTER, "мкг/м³");
#.................... Страница радиационного фона ....................#
      - id: ${device}_page10
        lambda: |-
          it.image(20, 40, id(${device}_img_radiation));
          it.printf(65, 130, font_1, white_color, TextAlign::TOP_CENTER, "%.1f", id(${ha_sensor}_stat).state);
          it.printf(65, 200, font_2, white_color, TextAlign::TOP_CENTER, "мкР/ч");
#....................... Страница освещенности .......................#
      - id: ${device}_page11
        lambda: |-
          it.image(20, 40, id(${device}_img_light));
          it.printf(65, 130, font_1, white_color, TextAlign::TOP_CENTER, "%.1f", id(${ha_sensor}_light).state);
          it.printf(65, 200, font_2, white_color, TextAlign::TOP_CENTER, "люкс");
#....................... Страница ультрафиолета ......................#
      - id: ${device}_page12
        lambda: |-
          it.image(20, 40, id(${device}_img_uv));
          it.printf(65, 130, font_1, white_color, TextAlign::TOP_CENTER, "%.1f", id(${ha_sensor}_uv).state);
